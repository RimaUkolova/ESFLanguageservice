# Generated by Django 2.2.2 on 2019-06-27 18:55

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtaildocs', '0010_document_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_slogan', models.CharField(blank=True, max_length=250, null=True, verbose_name='Лозунг страницы')),
                ('page_slogan_it', models.CharField(blank=True, max_length=250, null=True, verbose_name='Лозунг страницы')),
                ('page_slogan_en', models.CharField(blank=True, max_length=250, null=True, verbose_name='Лозунг страницы')),
                ('page_slogan_ru', models.CharField(blank=True, max_length=250, null=True, verbose_name='Лозунг страницы')),
                ('text1', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст1')),
                ('text1_it', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст1')),
                ('text1_en', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст1')),
                ('text1_ru', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст1')),
                ('text2', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст2')),
                ('text2_it', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст2')),
                ('text2_en', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст2')),
                ('text2_ru', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст2')),
                ('text3', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст3')),
                ('text3_it', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст3')),
                ('text3_en', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст3')),
                ('text3_ru', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст3')),
                ('feed_image', models.ForeignKey(blank=True, help_text='An optional image to represent the page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'About Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField()),
                ('date', models.DateField(verbose_name='Post date')),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_slogan', models.CharField(blank=True, max_length=250, null=True, verbose_name='Лозунг страницы')),
                ('text', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст')),
                ('text_it', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст')),
                ('text_en', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст')),
                ('text_ru', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст')),
                ('hidden_text', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Скрытый текст')),
                ('feed_image', models.ForeignKey(blank=True, help_text='An optional image to represent the page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Главная',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(help_text='Your Facebook page URL')),
                ('instagram', models.CharField(help_text='Your Instagram username, without the @', max_length=255)),
                ('trip_advisor', models.URLField(help_text='Your Trip Advisor page URL')),
                ('youtube', models.URLField(help_text='Your YouTube channel or user account URL')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteBranding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Название сайта')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение логотипа')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MainNewsSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Акции', max_length=250, verbose_name='Название ряда акций')),
                ('link_page1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page', verbose_name='Первая акция')),
                ('link_page2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page', verbose_name='Вторая акция')),
            ],
            options={
                'verbose_name_plural': 'Акции на главной',
            },
        ),
        migrations.CreateModel(
            name='LicenseAboutItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, help_text="Лицензии страницы 'about'", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='license_item', to='home.AboutPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePageCarouselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('caption', wagtail.core.fields.RichTextField(blank=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.Page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_items', to='home.HomePage', verbose_name='Домшняя карусель')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GalleryAboutItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, help_text='Изображение для галлереи', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_item', to='home.AboutPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPageRelatedLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_links', to='home.BlogPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdvantageAboutItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Название преимущества')),
                ('text', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст преимущества')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantage_item', to='home.AboutPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutPageCarouselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name1', models.CharField(blank=True, max_length=255, verbose_name='ФИО 1')),
                ('job1', models.CharField(blank=True, max_length=255, verbose_name='Должность 1')),
                ('name2', models.CharField(blank=True, max_length=255, verbose_name='ФИО 2')),
                ('job2', models.CharField(blank=True, max_length=255, verbose_name='Должность 2')),
                ('name3', models.CharField(blank=True, max_length=255, verbose_name='ФИО 3')),
                ('job3', models.CharField(blank=True, max_length=255, verbose_name='Должность 3')),
                ('image1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение 1')),
                ('image2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение 2')),
                ('image3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Изображение 3')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_items_about', to='home.AboutPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
